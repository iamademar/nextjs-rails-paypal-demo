{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/ademar/rails-nextjs-paypal-demo/subscription-frontend/app/hooks/useApi.ts"],"sourcesContent":["// Hook for making API calls\r\nimport { useState, useCallback } from \"react\";\r\n\r\ntype ApiMethod = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\r\n\r\ninterface ApiOptions {\r\n  method?: ApiMethod;\r\n  body?: object;\r\n  headers?: Record<string, string>;\r\n}\r\n\r\ninterface ApiState<T> {\r\n  data: T | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001/api\";\r\n\r\nexport function useApi<T>() {\r\n  const [state, setState] = useState<ApiState<T>>({\r\n    data: null,\r\n    loading: false,\r\n    error: null,\r\n  });\r\n\r\n  const request = useCallback(\r\n    async (endpoint: string, options: ApiOptions = {}) => {\r\n      const { method = \"GET\", body, headers = {} } = options;\r\n\r\n      // Set some default headers\r\n      const defaultHeaders = {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      };\r\n\r\n      // Set loading state\r\n      setState((prevState) => ({ ...prevState, loading: true, error: null }));\r\n\r\n      try {\r\n        // Make the request\r\n        const response = await fetch(`${BASE_URL}${endpoint}`, {\r\n          method,\r\n          headers: { ...defaultHeaders, ...headers },\r\n          body: body ? JSON.stringify(body) : undefined,\r\n        });\r\n\r\n        // Check if the response is ok\r\n        if (!response.ok) {\r\n          // Try to get error details from the response if available\r\n          let errorMessage = `Request failed with status ${response.status}`;\r\n          try {\r\n            const errorData = await response.json();\r\n            errorMessage = errorData.error || errorMessage;\r\n          } catch {\r\n            // If we can't parse the error response, just use the default message\r\n          }\r\n          throw new Error(errorMessage);\r\n        }\r\n\r\n        // Parse the response\r\n        const data = await response.json();\r\n\r\n        // Update the state with the data\r\n        setState({\r\n          data,\r\n          loading: false,\r\n          error: null,\r\n        });\r\n\r\n        return data;\r\n      } catch (error) {\r\n        // Update the state with the error\r\n        setState({\r\n          data: null,\r\n          loading: false,\r\n          error: error instanceof Error ? error.message : \"Unknown error\",\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    request,\r\n  };\r\n}\r\n\r\nexport default useApi;\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAC5B;;AAgBA,MAAM,WAAW,iEAAmC;AAE7C,SAAS;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;QAC9C,MAAM;QACN,SAAS;QACT,OAAO;IACT;IAEA,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EACxB,OAAO,UAAkB,UAAsB,CAAC,CAAC;QAC/C,MAAM,EAAE,SAAS,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,GAAG;QAE/C,2BAA2B;QAC3B,MAAM,iBAAiB;YACrB,gBAAgB;YAChB,QAAQ;QACV;QAEA,oBAAoB;QACpB,SAAS,CAAC,YAAc,CAAC;gBAAE,GAAG,SAAS;gBAAE,SAAS;gBAAM,OAAO;YAAK,CAAC;QAErE,IAAI;YACF,mBAAmB;YACnB,MAAM,WAAW,MAAM,MAAM,GAAG,WAAW,UAAU,EAAE;gBACrD;gBACA,SAAS;oBAAE,GAAG,cAAc;oBAAE,GAAG,OAAO;gBAAC;gBACzC,MAAM,OAAO,KAAK,SAAS,CAAC,QAAQ;YACtC;YAEA,8BAA8B;YAC9B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,0DAA0D;gBAC1D,IAAI,eAAe,CAAC,2BAA2B,EAAE,SAAS,MAAM,EAAE;gBAClE,IAAI;oBACF,MAAM,YAAY,MAAM,SAAS,IAAI;oBACrC,eAAe,UAAU,KAAK,IAAI;gBACpC,EAAE,OAAM;gBACN,qEAAqE;gBACvE;gBACA,MAAM,IAAI,MAAM;YAClB;YAEA,qBAAqB;YACrB,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,iCAAiC;YACjC,SAAS;gBACP;gBACA,SAAS;gBACT,OAAO;YACT;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,kCAAkC;YAClC,SAAS;gBACP,MAAM;gBACN,SAAS;gBACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAClD;YACA,MAAM;QACR;IACF,GACA,EAAE;IAGJ,OAAO;QACL,GAAG,KAAK;QACR;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///home/ademar/rails-nextjs-paypal-demo/subscription-frontend/app/components/PaypalSubscriptionButton.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport useApi from \"../hooks/useApi\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\ninterface PaypalSubscriptionButtonProps {\r\n  planId: string;\r\n  description: string;\r\n  amount: number;\r\n}\r\n\r\n// Define types for PayPal SDK\r\ninterface PayPalNamespace {\r\n  Buttons: (config: PayPalButtonConfig) => {\r\n    render: (element: HTMLElement) => void;\r\n  };\r\n}\r\n\r\ninterface PayPalButtonConfig {\r\n  style: {\r\n    layout: string;\r\n    color: string;\r\n    shape: string;\r\n    label: string;\r\n  };\r\n  createSubscription: (\r\n    data: unknown,\r\n    actions: PayPalActions\r\n  ) => Promise<string>;\r\n  onApprove: (data: PayPalApproveData) => Promise<void>;\r\n  onError: (err: Error) => void;\r\n}\r\n\r\ninterface PayPalActions {\r\n  subscription: {\r\n    create: (params: { plan_id: string }) => Promise<string>;\r\n  };\r\n}\r\n\r\ninterface PayPalApproveData {\r\n  subscriptionID: string;\r\n  [key: string]: unknown;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    paypal?: PayPalNamespace;\r\n  }\r\n}\r\n\r\nexport default function PaypalSubscriptionButton({\r\n  planId,\r\n  description,\r\n  amount,\r\n}: PaypalSubscriptionButtonProps) {\r\n  const paypalButtonRef = useRef<HTMLDivElement>(null);\r\n  const [scriptLoaded, setScriptLoaded] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const api = useApi();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Load the PayPal script if it hasn't been loaded already\r\n    if (!window.paypal) {\r\n      const script = document.createElement(\"script\");\r\n      const clientId = process.env.NEXT_PUBLIC_PAYPAL_CLIENT_ID;\r\n\r\n      if (!clientId) {\r\n        setError(\"PayPal client ID is not configured\");\r\n        return;\r\n      }\r\n\r\n      // Use the environment-specific URL and your actual client ID\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&vault=true&intent=subscription`;\r\n\r\n      // For sandbox testing, use this instead:\r\n      // script.src =\r\n      //   `https://www.sandbox.paypal.com/sdk/js?client-id=${clientId}&vault=true&intent=subscription`;\r\n\r\n      script.async = true;\r\n      script.onload = () => setScriptLoaded(true);\r\n      script.onerror = () => setError(\"Failed to load PayPal SDK\");\r\n      document.body.appendChild(script);\r\n\r\n      return () => {\r\n        document.body.removeChild(script);\r\n      };\r\n    } else {\r\n      setScriptLoaded(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Initialize the PayPal button once the script is loaded\r\n    if (scriptLoaded && paypalButtonRef.current && window.paypal) {\r\n      // Clear any existing buttons\r\n      paypalButtonRef.current.innerHTML = \"\";\r\n\r\n      window.paypal\r\n        .Buttons({\r\n          style: {\r\n            layout: \"vertical\",\r\n            color: \"blue\",\r\n            shape: \"rect\",\r\n            label: \"subscribe\",\r\n          },\r\n          createSubscription: (data: unknown, actions: PayPalActions) => {\r\n            return actions.subscription.create({\r\n              plan_id: planId,\r\n            });\r\n          },\r\n          onApprove: async (data: PayPalApproveData) => {\r\n            try {\r\n              const subscriptionId = data.subscriptionID;\r\n\r\n              // Send the subscription data to our backend\r\n              await api.request(\"/company_subscription\", {\r\n                method: \"POST\",\r\n                body: {\r\n                  subscription: {\r\n                    paypal_subscription_id: subscriptionId,\r\n                    plan_id: planId,\r\n                    description,\r\n                    payment_date: new Date().toISOString(),\r\n                    status: \"ACTIVE\",\r\n                    quantity: 1,\r\n                    amount,\r\n                  },\r\n                },\r\n              });\r\n\r\n              // Redirect to the billing page\r\n              router.push(\"/billing\");\r\n            } catch (error) {\r\n              setError(\"Failed to process subscription. Please try again.\");\r\n              console.error(\"Subscription processing error:\", error);\r\n            }\r\n          },\r\n          onError: (err: Error) => {\r\n            setError(\"An error occurred with PayPal. Please try again.\");\r\n            console.error(\"PayPal error:\", err);\r\n          },\r\n        })\r\n        .render(paypalButtonRef.current);\r\n    }\r\n  }, [scriptLoaded, planId, description, amount, api, router]);\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {error && (\r\n        <div className=\"p-3 mb-4 text-red-700 bg-red-100 border border-red-300 rounded\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      <div ref={paypalButtonRef} className=\"w-full\">\r\n        {!scriptLoaded && (\r\n          <div className=\"p-3 text-center border rounded\">\r\n            Loading PayPal...\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAmDe,SAAS,yBAAyB,EAC/C,MAAM,EACN,WAAW,EACX,MAAM,EACwB;IAC9B,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,MAAM,CAAA,GAAA,sHAAA,CAAA,UAAM,AAAD;IACjB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,0DAA0D;QAC1D,IAAI,CAAC,OAAO,MAAM,EAAE;YAClB,MAAM,SAAS,SAAS,aAAa,CAAC;YACtC,MAAM;YAEN,uCAAe;;YAGf;YAEA,6DAA6D;YAC7D,OAAO,GAAG,GAAG,CAAC,wCAAwC,EAAE,SAAS,+BAA+B,CAAC;YAEjG,yCAAyC;YACzC,eAAe;YACf,kGAAkG;YAElG,OAAO,KAAK,GAAG;YACf,OAAO,MAAM,GAAG,IAAM,gBAAgB;YACtC,OAAO,OAAO,GAAG,IAAM,SAAS;YAChC,SAAS,IAAI,CAAC,WAAW,CAAC;YAE1B,OAAO;gBACL,SAAS,IAAI,CAAC,WAAW,CAAC;YAC5B;QACF,OAAO;YACL,gBAAgB;QAClB;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,yDAAyD;QACzD,IAAI,gBAAgB,gBAAgB,OAAO,IAAI,OAAO,MAAM,EAAE;YAC5D,6BAA6B;YAC7B,gBAAgB,OAAO,CAAC,SAAS,GAAG;YAEpC,OAAO,MAAM,CACV,OAAO,CAAC;gBACP,OAAO;oBACL,QAAQ;oBACR,OAAO;oBACP,OAAO;oBACP,OAAO;gBACT;gBACA,oBAAoB,CAAC,MAAe;oBAClC,OAAO,QAAQ,YAAY,CAAC,MAAM,CAAC;wBACjC,SAAS;oBACX;gBACF;gBACA,WAAW,OAAO;oBAChB,IAAI;wBACF,MAAM,iBAAiB,KAAK,cAAc;wBAE1C,4CAA4C;wBAC5C,MAAM,IAAI,OAAO,CAAC,yBAAyB;4BACzC,QAAQ;4BACR,MAAM;gCACJ,cAAc;oCACZ,wBAAwB;oCACxB,SAAS;oCACT;oCACA,cAAc,IAAI,OAAO,WAAW;oCACpC,QAAQ;oCACR,UAAU;oCACV;gCACF;4BACF;wBACF;wBAEA,+BAA+B;wBAC/B,OAAO,IAAI,CAAC;oBACd,EAAE,OAAO,OAAO;wBACd,SAAS;wBACT,QAAQ,KAAK,CAAC,kCAAkC;oBAClD;gBACF;gBACA,SAAS,CAAC;oBACR,SAAS;oBACT,QAAQ,KAAK,CAAC,iBAAiB;gBACjC;YACF,GACC,MAAM,CAAC,gBAAgB,OAAO;QACnC;IACF,GAAG;QAAC;QAAc;QAAQ;QAAa;QAAQ;QAAK;KAAO;IAE3D,qBACE,8OAAC;QAAI,WAAU;;YACZ,uBACC,8OAAC;gBAAI,WAAU;0BACZ;;;;;;0BAGL,8OAAC;gBAAI,KAAK;gBAAiB,WAAU;0BAClC,CAAC,8BACA,8OAAC;oBAAI,WAAU;8BAAiC;;;;;;;;;;;;;;;;;AAO1D","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///home/ademar/rails-nextjs-paypal-demo/subscription-frontend/app/%28public%29/upgrade/basic/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport PaypalSubscriptionButton from \"../../../components/PaypalSubscriptionButton\";\r\nimport Link from \"next/link\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function BasicUpgradePage() {\r\n  const planId = process.env.NEXT_PUBLIC_PAYPAL_BASIC_PLAN_ID;\r\n\r\n  // Add debugging to check the plan ID\r\n  useEffect(() => {\r\n    console.log(\"PayPal Plan ID:\", planId);\r\n  }, [planId]);\r\n\r\n  if (!planId) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"p-8 max-w-md\">\r\n          <h1 className=\"text-2xl font-bold text-red-600 mb-4\">\r\n            Configuration Error\r\n          </h1>\r\n          <p className=\"mb-4\">\r\n            The Basic Plan ID is not configured. Please check your environment\r\n            variables.\r\n          </p>\r\n          <Link\r\n            href=\"/\"\r\n            className=\"block w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md text-center\"\r\n          >\r\n            Return to Home\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center p-4\">\r\n      <div className=\"p-8 max-w-md w-full shadow-lg rounded-lg border\">\r\n        <h1 className=\"text-2xl font-bold mb-6 text-center\">\r\n          Upgrade to Basic Plan\r\n        </h1>\r\n\r\n        <div className=\"mb-8\">\r\n          <div className=\"mb-4 p-4 bg-blue-50 rounded-md\">\r\n            <h2 className=\"text-xl font-semibold mb-2\">Basic Plan</h2>\r\n            <p className=\"text-gray-600 mb-2\">\r\n              Access to core features with limited usage.\r\n            </p>\r\n            <p className=\"text-2xl font-bold text-blue-600\">$139 / month</p>\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <h3 className=\"font-semibold mb-2\">What&apos;s included:</h3>\r\n            <ul className=\"list-disc list-inside space-y-1 text-gray-700\">\r\n              <li>Basic feature access</li>\r\n              <li>Up to 100 users</li>\r\n              <li>Email support</li>\r\n              <li>1 GB storage</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <PaypalSubscriptionButton\r\n          planId={planId}\r\n          description=\"Basic Plan Subscription\"\r\n          amount={139}\r\n        />\r\n\r\n        <div className=\"mt-4 text-center\">\r\n          <Link href=\"/\" className=\"text-blue-600 hover:underline\">\r\n            Cancel and return to home\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM;IAEN,qCAAqC;IACrC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC,mBAAmB;IACjC,GAAG;QAAC;KAAO;IAEX,uCAAa;;IAoBb;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAsC;;;;;;8BAIpD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,8OAAC;oCAAE,WAAU;8CAAqB;;;;;;8CAGlC,8OAAC;oCAAE,WAAU;8CAAmC;;;;;;;;;;;;sCAGlD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAqB;;;;;;8CACnC,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;sDAAG;;;;;;sDACJ,8OAAC;sDAAG;;;;;;sDACJ,8OAAC;sDAAG;;;;;;sDACJ,8OAAC;sDAAG;;;;;;;;;;;;;;;;;;;;;;;;8BAKV,8OAAC,8IAAA,CAAA,UAAwB;oBACvB,QAAQ;oBACR,aAAY;oBACZ,QAAQ;;;;;;8BAGV,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;kCAAgC;;;;;;;;;;;;;;;;;;;;;;AAOnE","debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}